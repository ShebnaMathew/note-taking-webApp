{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\";\nimport Project from \"../components/Project\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport { useEffect, useState } from \"react\";\nimport AddNote from \"../components/AddNote\";\nimport Note from \"../components/Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass textNote {\n  constructor() {\n    this.project = \"\";\n    this.type = NOTE_TYPE.TEXT;\n    this.title = \"\";\n    this.text = \"\";\n  }\n\n}\n\nclass linkNote {\n  constructor() {\n    this.project = \"\";\n    this.type = NOTE_TYPE.LINK;\n    this.url = \"\";\n    this.text = \"\";\n  }\n\n}\n\nconst App = () => {\n  _s();\n\n  const [toRender, setToRender] = useState(allProjects);\n  const [newData, setData] = useState([]);\n  console.log(\"newData: \", newData);\n  const allProjects = new Array();\n\n  (function () {\n    Object.keys(data).map((project, idx) => {\n      allProjects.push(project);\n    });\n  })();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand mb-0 h1 mx-auto\",\n          children: \"All we do is take notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      className: \"text-center bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        role: \"group\",\n        \"aria-label\": \"Basic example\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender(allProjects),\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), Object.keys(data).map((project, idx) => project != NO_PROJECT ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([project]),\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this) : \"\"), Object.keys(newData).map((each, idx) => !toRender.includes(newData[each].project) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([newData[each].project]),\n          children: newData[each].project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseExample\",\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse mx-auto\",\n      id: \"collapseExample\",\n      children: /*#__PURE__*/_jsxDEV(AddNote, {\n        callback: setData,\n        projects: allProjects,\n        data: newData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [Object.keys(data).map((project, idx) => toRender.includes(project) ? /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        notes: data[project]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-2 row-cols-sm-3 row-cols-md-4\",\n        children: Object.keys(newData).map((each, idx) => toRender.includes(newData[each].project) ? /*#__PURE__*/_jsxDEV(Note, {\n          project: newData[each].project,\n          type: newData[each].type,\n          text: newData[each].text,\n          title: newData[each].title,\n          url: newData[each].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this) : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"9UqAiYvdvWwlcOW+Mw/aEffXg4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js"],"names":["data","NOTE_TYPE","NO_PROJECT","Project","useEffect","useState","AddNote","Note","textNote","project","type","TEXT","title","text","linkNote","LINK","url","App","toRender","setToRender","allProjects","newData","setData","console","log","Array","Object","keys","map","idx","push","each","includes"],"mappings":"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","sourcesContent":["import data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport {useEffect, useState} from \"react\";\nimport AddNote from \"../components/AddNote\"\nimport Note from \"../components/Note\"\n\n\n\nclass textNote  {\n    project = \"\";\n    type = NOTE_TYPE.TEXT;\n    title = \"\";\n    text = \"\";\n}\n\nclass linkNote  {\n    project = \"\";\n    type = NOTE_TYPE.LINK;\n    url = \"\";\n    text = \"\";\n}\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [newData, setData] = useState([]);\n    console.log(\"newData: \", newData)\n    const allProjects = new Array();\n    (function() {\n        Object.keys(data).map ((project, idx) => {\n            allProjects.push(project)\n        })\n    })();\n\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div id=\"projects\" className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        { Object.keys(data).map((project,idx) =>\n                                ((project != NO_PROJECT) ? \n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                    {project}\n                                </button>: \"\")\n                        )}\n                        {Object.keys(newData).map((each,idx) => \n                        ((!toRender.includes(newData[each].project)) ? \n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([newData[each].project])}>\n                            {newData[each].project}\n                        </button>: \"\")\n                    \n                    )\n                    }\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\">\n                            + Add\n                        </button>\n                    </div>\n                    \n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseExample\">\n                    <AddNote callback={setData} projects={allProjects} data={newData}/>\n                </div>\n                <div className=\"container\">\n                    \n                    { Object.keys(data).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={data[project]}/> : \"\")\n                        )\n                    }\n                    <div className=\"row row-cols-2 row-cols-sm-3 row-cols-md-4\">\n                    {Object.keys(newData).map((each,idx) => \n                        \n                        ((toRender.includes(newData[each].project)) ?\n                            <Note project={newData[each].project} type={newData[each].type} text={newData[each].text} title={newData[each].title} url={newData[each].url}/>\n                            :\"\")\n                    \n                    )\n                    }\n                    </div>\n                </div>\n            </div>\n    )\n}\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}