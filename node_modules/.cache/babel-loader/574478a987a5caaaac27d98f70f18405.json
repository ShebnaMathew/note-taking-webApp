{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\";\nimport Project from \"../components/Project\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport { useState } from \"react\";\nimport AddNote from \"../components/AddNote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allProjects = new Array();\n\n(function () {\n  Object.keys(data).map((project, idx) => {\n    allProjects.push(project);\n  });\n})();\n\nclass textNote {\n  constructor() {\n    this.project = \"\";\n    this.type = NOTE_TYPE.TEXT;\n    this.title = \"\";\n    this.text = \"\";\n  }\n\n}\n\nclass linkNote {\n  constructor() {\n    this.project = \"\";\n    this.type = NOTE_TYPE.LINK;\n    this.url = \"\";\n    this.text = \"\";\n  }\n\n}\n\nconst App = () => {\n  _s();\n\n  const [toRender, setToRender] = useState(allProjects);\n  const [newData, setData] = useState([]);\n  console.log(\"newData: \", newData);\n\n  const addNote = (selectedProject, selectedType, title, text, url) => {\n    if (!allProjects.includes(selectedProject)) {\n      allProjects.push(selectedProject);\n    }\n\n    console.log(\"to render: \", allProjects);\n    let note;\n\n    if (selectedType == NOTE_TYPE.TEXT) {\n      note = new textNote(selectedProject, NOTE_TYPE.TEXT, title, text);\n    }\n\n    if (selectedType == NOTE_TYPE.LINK) {\n      note = new linkNote(selectedProject, NOTE_TYPE.LINK, url, text);\n    }\n\n    newData.push(note);\n    console.log(\"note: \", note);\n    console.log(\"new data: \", newData);\n    setData(newData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand mb-0 h1 mx-auto\",\n          children: \"All we do is take notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      className: \"text-center bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        role: \"group\",\n        \"aria-label\": \"Basic example\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender(allProjects),\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), Object.keys(data).map((project, idx) => project != NO_PROJECT ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([project]),\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseExample\",\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse mx-auto\",\n      id: \"collapseExample\",\n      children: /*#__PURE__*/_jsxDEV(AddNote, {\n        callback: setData,\n        projects: allProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(data).map((project, idx) => toRender.includes(project) ? /*#__PURE__*/_jsxDEV(Project, {\n          project: project,\n          notes: data[project]\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this) : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(newData).map((each, idx) => /*#__PURE__*/_jsxDEV(Project, {\n          project: newData[each].project,\n          notes: each\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"9UqAiYvdvWwlcOW+Mw/aEffXg4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js"],"names":["data","NOTE_TYPE","NO_PROJECT","Project","useState","AddNote","allProjects","Array","Object","keys","map","project","idx","push","textNote","type","TEXT","title","text","linkNote","LINK","url","App","toRender","setToRender","newData","setData","console","log","addNote","selectedProject","selectedType","includes","note","each"],"mappings":"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","sourcesContent":["import data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport {useState} from \"react\";\nimport AddNote from \"../components/AddNote\"\n\nconst allProjects = new Array();\n(function() {\n    Object.keys(data).map ((project, idx) => {\n        allProjects.push(project)\n    })\n})();\n\nclass textNote  {\n    project = \"\";\n    type = NOTE_TYPE.TEXT;\n    title = \"\";\n    text = \"\";\n}\n\nclass linkNote  {\n    project = \"\";\n    type = NOTE_TYPE.LINK;\n    url = \"\";\n    text = \"\";\n}\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [newData, setData] = useState([]);\n    console.log(\"newData: \", newData)\n    const addNote = (selectedProject,selectedType,title,text,url) => {\n        \n        if(!allProjects.includes(selectedProject)){\n            allProjects.push(selectedProject)\n        }\n        console.log(\"to render: \", allProjects)\n\n        let note;\n        if (selectedType == NOTE_TYPE.TEXT) {\n            note = new textNote(selectedProject, NOTE_TYPE.TEXT, title, text)\n        }\n        if(selectedType == NOTE_TYPE.LINK) {\n            note = new linkNote(selectedProject, NOTE_TYPE.LINK, url,text)\n        }\n        \n        newData.push(note)\n        console.log(\"note: \", note)\n        console.log(\"new data: \", newData)\n        setData(newData)\n        \n    }\n\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div id=\"projects\" className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        { Object.keys(data).map((project,idx) =>\n                                ((project != NO_PROJECT) ? \n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                    {project}\n                                </button>: \"\")\n                        )}\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\">\n                            + Add\n                        </button>\n                    </div>\n                    \n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseExample\">\n                    <AddNote callback={setData} projects={allProjects}/>\n                </div>\n                <div className=\"container\">\n                    <div>\n                    { Object.keys(data).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={data[project]}/> : \"\")\n                        )\n                    }\n                    </div>\n                    <div>\n                    {Object.keys(newData).map((each,idx) => (\n                        \n                        <Project key={idx} project={newData[each].project} notes={each}/>\n                    \n                    ))}\n                    </div>\n                </div>\n            </div>\n    )\n}\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}