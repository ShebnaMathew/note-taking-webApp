{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport data, { NO_PROJECT } from \"../data/data\";\nimport Project from \"../components/Project\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport { useState } from \"react\";\nimport AddNote from \"../components/AddNote\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { NavLink } from \"react-bootstrap\";\nimport Navlink from \"../components/Navlink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst projectType = project => {\n  if (project == NO_PROJECT) {\n    return true;\n  }\n\n  return false;\n};\n\nconst projects = new Array();\nconst noprojects = new Array();\n\n(function () {\n  Object.keys(data).map((project, idx) => {\n    if (project !== NO_PROJECT) {\n      projects.push(project); //<Project key={idx} project={project} notes={data[project]}/>)\n      //console.log(\"notes: \", data[project]);\n    } else {\n      noprojects.push( /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        notes: data[project]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this));\n    }\n  });\n})();\n\nconst allProjects = new Array();\n\n(function () {\n  Object.keys(data).map((project, idx) => {\n    allProjects.push(project);\n  });\n})();\n\nconst variants = [\"info\", \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"];\n\nconst random = () => {\n  return variants[Math.floor(Math.random() * variants.length)];\n};\n\nconst App = () => {\n  _s();\n\n  const [toRender, setToRender] = useState(allProjects);\n  const [dogs, setDogs] = useState(true);\n\n  const addNote = (selectedProject, selectedType, isTitlePresent, title, isTextPresent, text, isUrlPresent, url) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand mb-0 h1 mx-auto\",\n          children: \"All we do is take notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        role: \"group\",\n        \"aria-label\": \"Basic example\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender(allProjects),\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), Object.keys(data).map((project, idx) => project != NO_PROJECT ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([project]),\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseExample\",\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse mx-auto\",\n      id: \"collapseExample\",\n      children: /*#__PURE__*/_jsxDEV(AddNote, {\n        callback: addNote,\n        projects: allProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: Object.keys(data).map((project, idx) => toRender.includes(project) ? /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        notes: data[project]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }, this) : \"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"jQcJaVcBmjLkzPg6j7wADa5T3K4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js"],"names":["data","NO_PROJECT","Project","useState","AddNote","Navbar","NavDropdown","Nav","Tab","Tabs","Container","Row","Col","ListGroup","NavLink","Navlink","projectType","project","projects","Array","noprojects","Object","keys","map","idx","push","allProjects","variants","random","Math","floor","length","App","toRender","setToRender","dogs","setDogs","addNote","selectedProject","selectedType","isTitlePresent","title","isTextPresent","text","isUrlPresent","url","includes"],"mappings":"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","sourcesContent":["import data, { NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport {useState} from \"react\";\nimport AddNote from \"../components/AddNote\"\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { NavLink } from \"react-bootstrap\";\nimport Navlink from \"../components/Navlink\"\nconst projectType = (project) => {\n    if (project == NO_PROJECT) {\n        return true\n    }\n    return false\n}\nconst projects = new Array();\nconst noprojects = new Array();\n\n(function(){\n    \n\n    Object.keys(data).map ((project, idx) => {\n        if (project !== NO_PROJECT) {\n            projects.push(project)\n                        //<Project key={idx} project={project} notes={data[project]}/>)\n                        //console.log(\"notes: \", data[project]);\n        } else {\n            noprojects.push(<Project key={idx} project={project} notes={data[project]}/>);\n        }\n    })\n})();\n\nconst allProjects = new Array();\n(function() {\n    \n\n    Object.keys(data).map ((project, idx) => {\n        allProjects.push(project)\n    })\n})();\n\nconst variants = [\"info\",\"primary\",\"secondary\",\"success\",\"danger\",\"warning\",\"info\",\"light\"]\n\nconst random = () => {\n    return variants[Math.floor(Math.random() * variants.length)];\n}\n\n\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [dogs, setDogs] = useState(true);\n\n    const addNote = (selectedProject,selectedType,isTitlePresent,title,isTextPresent,text,isUrlPresent,url) => {\n        \n    }\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        { Object.keys(data).map((project,idx) =>\n                                ((project != NO_PROJECT) ? \n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                    {project}\n                                </button>: \"\")\n                        )}\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\">\n                            + Add\n                        </button>\n                    </div>\n                    \n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseExample\">\n                    <AddNote callback={addNote} projects={allProjects}/>\n                </div>\n                <div className=\"container\">\n                    { Object.keys(data).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={data[project]}/> : \"\")\n                        )}\n                </div>\n            </div>\n    )\n}\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}