{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/components/TextInput.js\";\nimport { NOTE_TYPE } from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextInput = props => {\n  const isValid = e => {\n    if (props.field !== \"Create new Project\") {\n      if (e.target.value.length > 0) {\n        props.markPresent(true);\n        props.setValue(e.target.value);\n      } else {\n        props.markPresent(false);\n        props.setValue(e.target.value);\n      }\n\n      if (props.type === NOTE_TYPE.TEXT) {\n        if ((props.field === \"Title\" || props.field === \"Text\") && e.target.value.length > 0) {\n          props.enable(true);\n        } else {\n          props.enable(false);\n        }\n      } else {\n        if (props.field === \"url\" && e.target.value.length > 0) {\n          props.enable(true);\n        } else {\n          props.enable(false);\n        }\n      }\n    } else {\n      props.setValue(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form-group align-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlfor: \"formGroupExampleInput\",\n      children: props.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"formGroupExampleInput\",\n      placeholder: props.field,\n      onChange: isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/components/TextInput.js"],"names":["NOTE_TYPE","TextInput","props","isValid","e","field","target","value","length","markPresent","setValue","type","TEXT","enable"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,cAAxB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEvB,QAAMC,OAAO,GAAIC,CAAD,IAAO;AAEnB,QAAGF,KAAK,CAACG,KAAN,KAAgB,oBAAnB,EAAwC;AAExC,UAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3BN,QAAAA,KAAK,CAACO,WAAN,CAAkB,IAAlB;AACAP,QAAAA,KAAK,CAACQ,QAAN,CAAeN,CAAC,CAACE,MAAF,CAASC,KAAxB;AACH,OAHD,MAGO;AACHL,QAAAA,KAAK,CAACO,WAAN,CAAkB,KAAlB;AACAP,QAAAA,KAAK,CAACQ,QAAN,CAAeN,CAAC,CAACE,MAAF,CAASC,KAAxB;AACH;;AAED,UAAIL,KAAK,CAACS,IAAN,KAAeX,SAAS,CAACY,IAA7B,EAAmC;AAC/B,YAAI,CAACV,KAAK,CAACG,KAAN,KAAgB,OAAhB,IAA2BH,KAAK,CAACG,KAAN,KAAgB,MAA5C,KAAuDD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAAnF,EAAsF;AAClFN,UAAAA,KAAK,CAACW,MAAN,CAAa,IAAb;AACH,SAFD,MAEO;AACHX,UAAAA,KAAK,CAACW,MAAN,CAAa,KAAb;AACH;AACJ,OAND,MAMO;AACH,YAAGX,KAAK,CAACG,KAAN,KAAgB,KAAhB,IAAyBD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAApD,EAAuD;AACnDN,UAAAA,KAAK,CAACW,MAAN,CAAa,IAAb;AACH,SAFD,MAEO;AACHX,UAAAA,KAAK,CAACW,MAAN,CAAa,KAAb;AACH;AACJ;AACJ,KAvBG,MAuBG;AACHX,MAAAA,KAAK,CAACQ,QAAN,CAAeN,CAAC,CAACE,MAAF,CAASC,KAAxB;AACH;AACA,GA5BD;;AA8BA,sBAEI;AAAK,IAAA,KAAK,EAAC,yBAAX;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA,gBAAwCL,KAAK,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,EAAE,EAAC,uBAA3C;AAAmE,MAAA,WAAW,EAAEH,KAAK,CAACG,KAAtF;AAA6F,MAAA,QAAQ,EAAEF;AAAvG;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CAvCD;;KAAMF,S;AAyCN,eAAeA,SAAf","sourcesContent":["import {NOTE_TYPE} from \"../data/data\"\n\nconst TextInput = props => {\n\n    const isValid = (e) => {\n\n        if(props.field !== \"Create new Project\"){\n\n        if (e.target.value.length > 0) {\n            props.markPresent(true)\n            props.setValue(e.target.value)\n        } else {\n            props.markPresent(false)\n            props.setValue(e.target.value)\n        }\n\n        if (props.type === NOTE_TYPE.TEXT) {\n            if ((props.field === \"Title\" || props.field === \"Text\") && e.target.value.length > 0) {\n                props.enable(true)\n            } else {\n                props.enable(false)\n            }\n        } else {\n            if(props.field === \"url\" && e.target.value.length > 0) {\n                props.enable(true)\n            } else {\n                props.enable(false)\n            }\n        }\n    } else {\n        props.setValue(e.target.value)\n    }\n    }\n\n    return (\n\n        <div class=\"form-group align-center\">\n            <label htmlfor=\"formGroupExampleInput\">{props.field}</label>\n            <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder={props.field} onChange={isValid}/>\n        </div>\n    )\n}\n\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}