{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/components/AddNote.js\",\n    _s = $RefreshSig$();\n\nimport SelectProject from \"./SelectProject\";\nimport SelectType from \"./SelectType\";\nimport TextInput from \"./TextInput\";\nimport { useState, useEffect } from \"react\";\nimport AddCancel from \"./AddCancel\";\nimport { NO_PROJECT } from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNote = props => {\n  _s();\n\n  const [selectedProject, setProject] = useState(NO_PROJECT);\n  const [selectedType, setType] = useState(\"\");\n  const [isTextPresent, setText] = useState(false);\n  const [isTitlePresent, setTitle] = useState(false);\n  const [isUrlPresent, setUrl] = useState(false);\n  const [selectedColor, setColor] = useState(\"light\");\n  const [isEnabled, setEnable] = useState(false);\n\n  const isValid = () => {\n    if (selectedType === \"Text\" && (isTextPresent || isTitlePresent) || selectedType === \"Link\" && isUrlPresent) {\n      return \"true\";\n    }\n\n    return \"false\";\n  };\n  /*\n  useEffect(() => {\n      setEnable(isUrlPresent)\n    }, [isUrlPresent]);\n     useEffect(() => {\n      setEnable(isTextPresent)\n    }, [isTextPresent]);\n     useEffect(() => {\n      setEnable(isTitlePresent)\n    }, [isTitlePresent]);\n    */\n\n\n  console.log(\"set type: \", selectedType);\n  console.log(\"set url: \", isUrlPresent);\n  console.log(\"enabled: \", isEnabled);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SelectProject, {\n        projects: props.projects,\n        selectedProject: setProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SelectType, {\n        selectedType: props.selectedType,\n        callBack: setType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        field: \"Title\",\n        callBack: setTitle,\n        type: selectedType,\n        enable: setEnable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        field: \"Text\",\n        callBack: setText,\n        type: selectedType,\n        enable: setEnable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        field: \"url\",\n        callBack: setUrl,\n        type: selectedType,\n        enable: setEnable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AddCancel, {\n        enable: isEnabled,\n        callback: props.callBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddNote, \"j2se7Katt23ljTixk1+7FNXKxts=\");\n\n_c = AddNote;\nexport default AddNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/components/AddNote.js"],"names":["SelectProject","SelectType","TextInput","useState","useEffect","AddCancel","NO_PROJECT","AddNote","props","selectedProject","setProject","selectedType","setType","isTextPresent","setText","isTitlePresent","setTitle","isUrlPresent","setUrl","selectedColor","setColor","isEnabled","setEnable","isValid","console","log","projects","callBack"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;;AAIA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AAEjB,QAAM,CAACC,eAAD,EAAkBC,UAAlB,IAAgCP,QAAQ,CAACG,UAAD,CAA9C;AACA,QAAM,CAACK,YAAD,EAAeC,OAAf,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,aAAD,EAAgBC,OAAhB,IAA2BX,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACY,cAAD,EAAiBC,QAAjB,IAA6Bb,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAACc,YAAD,EAAeC,MAAf,IAAyBf,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACgB,aAAD,EAAgBC,QAAhB,IAA4BjB,QAAQ,CAAC,OAAD,CAA1C;AACA,QAAM,CAACkB,SAAD,EAAYC,SAAZ,IAAyBnB,QAAQ,CAAC,KAAD,CAAvC;;AAGA,QAAMoB,OAAO,GAAG,MAAM;AAClB,QAAMZ,YAAY,KAAK,MAAlB,KAA8BE,aAAa,IAAIE,cAA/C,CAAD,IACCJ,YAAY,KAAK,MAAlB,IAA6BM,YADjC,EACgD;AACxC,aAAO,MAAP;AACH;;AACL,WAAO,OAAP;AACH,GAND;AAQA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIQO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bd,YAA1B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,YAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,SAAzB;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEb,KAAK,CAACkB,QAA/B;AAAyC,QAAA,eAAe,EAAEhB;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEF,KAAK,CAACG,YAAhC;AAA8C,QAAA,QAAQ,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,QAAQ,EAAEI,QAAnC;AAA6C,QAAA,IAAI,EAAEL,YAAnD;AAAiE,QAAA,MAAM,EAAEW;AAAzE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAwB,QAAA,QAAQ,EAAER,OAAlC;AAA2C,QAAA,IAAI,EAAEH,YAAjD;AAA+D,QAAA,MAAM,EAAEW;AAAvE;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,KAAjB;AAAuB,QAAA,QAAQ,EAAEJ,MAAjC;AAAyC,QAAA,IAAI,EAAEP,YAA/C;AAA6D,QAAA,MAAM,EAAEW;AAArE;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAED,SAAnB;AAA8B,QAAA,QAAQ,EAAEb,KAAK,CAACmB;AAA9C;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBP,CArDD;;GAAMpB,O;;KAAAA,O;AAuDN,eAAeA,OAAf","sourcesContent":["import SelectProject from \"./SelectProject\"\nimport SelectType from \"./SelectType\"\nimport TextInput from \"./TextInput\"\nimport {useState, useEffect} from \"react\";\nimport AddCancel from \"./AddCancel\";\nimport { NO_PROJECT } from \"../data/data\";\n\n\n\nconst AddNote = props => {\n\n        const [selectedProject, setProject] = useState(NO_PROJECT);\n        const [selectedType, setType] = useState(\"\");\n        const [isTextPresent, setText] = useState(false);\n        const [isTitlePresent, setTitle] = useState(false); \n        const [isUrlPresent, setUrl] = useState(false);\n        const [selectedColor, setColor] = useState(\"light\");\n        const [isEnabled, setEnable] = useState(false);\n\n        \n        const isValid = () => {\n            if (((selectedType === \"Text\") && (isTextPresent || isTitlePresent))\n            || ((selectedType === \"Link\") && isUrlPresent)) {\n                    return \"true\"\n                }\n            return \"false\"\n        }\n\n        /*\n        useEffect(() => {\n            setEnable(isUrlPresent)\n          }, [isUrlPresent]);\n\n          useEffect(() => {\n            setEnable(isTextPresent)\n          }, [isTextPresent]);\n\n          useEffect(() => {\n            setEnable(isTitlePresent)\n          }, [isTitlePresent]);\n          */\n\n        console.log(\"set type: \", selectedType)\n        console.log(\"set url: \", isUrlPresent)\n        console.log(\"enabled: \", isEnabled)\n    \n        return (\n            <>\n                <div className=\"container\">\n                    <SelectProject projects={props.projects} selectedProject={setProject}/>\n                    <SelectType selectedType={props.selectedType} callBack={setType}/>\n                    <TextInput field=\"Title\" callBack={setTitle} type={selectedType} enable={setEnable}/>\n                    \n                    <TextInput field=\"Text\" callBack={setText} type={selectedType} enable={setEnable}/>\n                    <TextInput field=\"url\" callBack={setUrl} type={selectedType} enable={setEnable}/>\n                    \n                    <AddCancel enable={isEnabled} callback={props.callBack}/>\n                </div>\n                \n                \n            </>\n        )\n}\n\nexport default AddNote;"]},"metadata":{},"sourceType":"module"}