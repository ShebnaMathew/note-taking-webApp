{"version":3,"sources":["data/data.js","components/FullText.js","components/Text.js","components/Link.js","components/Note.js","components/Project.js","components/SelectProject.js","components/SelectType.js","components/TextInput.js","components/AddCancel.js","components/SelectColor.js","components/AddNote.js","views/App.js","reportWebVitals.js","index.js"],"names":["NOTE_TYPE","NO_PROJECT","type","title","text","url","FullText","props","className","data-bs-toggle","data-bs-target","tabindex","id","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","Text","style","bg","project","length","Link","href","Note","Project","notes","Object","keys","map","note","i","SelectProject","htmlFor","onChange","e","callback","target","value","selected","projects","idx","SelectType","name","resetUrl","enable","resetText","resetTitle","TextInput","useState","errorStyle","setErrorStyle","field","class","placeholder","setValue","AddCancel","state","role","aria-disabled","onClick","color","data","SelectColor","AddNote","selectedProject","setProject","newProject","setNewProject","selectedType","setType","setText","setTitle","setUrl","selectedColor","setColor","isEnabled","setEnable","allProjects","push","App","toRender","setToRender","newData","setData","each","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f66c13e.chunk.js","sourcesContent":["export const NOTE_TYPE = {\n    TEXT: \"text\",\n    LINK: \"link\"\n}\n\nexport const NO_PROJECT = \"no project\"\n\nexport default {\n    \"Learn React\" : [\n        {\n            type: NOTE_TYPE.TEXT,\n            title: \"Create a new project\",\n            text: \"cd to the project directory\\nnpx create-react-app project-name\\ncd project-name\\nnpm start\"\n        },\n        {\n            type: NOTE_TYPE.LINK,\n            url: \"https://reactjs.org/docs/getting-started.html\",\n            text: \"React docs\"\n        },\n        {\n            type: NOTE_TYPE.LINK,\n            url: \"https://reactstrap.github.io/\",\n            text: \"Reactstrap docs\"\n        }\n    ],\n    [NO_PROJECT]: [\n        {\n            type: NOTE_TYPE.TEXT,\n            title: \"Lorem ipsum\",\n            text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Amet massa vitae tortor condimentum. Pretium aenean pharetra magna ac placerat vestibulum lectus mauris ultrices. Justo nec ultrices dui sapien eget mi proin sed libero. Ultricies leo integer malesuada nunc vel risus commodo viverra maecenas. Nisi quis eleifend quam adipiscing. Sit amet tellus cras adipiscing enim eu. Tincidunt tortor aliquam nulla facilisi cras fermentum. Orci phasellus egestas tellus rutrum. Tortor dignissim convallis aenean et. Imperdiet proin fermentum leo vel orci porta non pulvinar neque. Purus semper eget duis at tellus. Ut consequat semper viverra nam libero justo laoreet sit amet. Sed enim ut sem viverra aliquet eget. Amet volutpat consequat mauris nunc congue nisi. Aliquet nibh praesent tristique magna.\"\n        },\n        {\n            type: NOTE_TYPE.LINK,\n            url: \"https://loremipsum.io/generator/\",\n            text: \"Lorem Ipsum generator\"\n        }\n    ]\n}\n","\nconst FullText = props => {\n\n    return (\n        <>\n            <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"modal\" data-bs-target=\"#addNote\">\n                Show complete text\n            </button>\n\n            <div className=\"modal fade\" tabindex=\"-1\" id=\"addNote\" aria-labelledby=\"addNote\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"addNote\">Complete text</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {props.text}\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FullText;","\nimport FullText from './FullText';\n\nconst Text = props => {\n    const style = \"card text-dark mb-3 \" + props.bg\n    return (\n            <div className=\"col-lg-3\">\n                <div className={style}>\n                    <div className=\"card-header font-weight-bold\">{props.project}</div>\n                    <div className=\"card-body\">\n                    <h5 className=\"card-title\">{props.title}</h5>\n                    <p className=\"card-text\">\n                        {\n                        ((props.text.length < 100) ? props.text : <FullText text={props.text}/>)\n                        }\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Text;\n","\nconst Link = props => {\n\n    const style = \"card text-dark mb-3 \" + props.bg\n\n    var text;\n\n    if(props.text) {\n        text = props.text;\n    } else {\n        text = props.url;\n    }\n    \n    return (\n        <div className=\"col-lg-3\">\n            <div className={style}>\n                <div className=\"card-header font-weight-bold\">{props.project}</div>\n                <div className=\"card-body\">\n                    <a className=\"card-text\" href={props.url}>{text}</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Link;","import { NOTE_TYPE } from \"../data/data\";\n\nimport Text from \"./Text\"\nimport Link from \"./Link\"\n\nconst Note = props => {\n    if (props.type === NOTE_TYPE.TEXT) {\n        return (<Text project={props.project} text={props.text} title={props.title} bg={props.bg?props.bg:\"bg-warning\"}/>)\n    } else if (props.type === NOTE_TYPE.LINK) {\n        return (<Link project={props.project} text={props.text} url={props.url} bg={props.bg?props.bg:\"bg-light\"}/>)\n    }\n    return null;\n}\n\n\nexport default Note;","import Note from \"./Note\"\n\nconst Project = props => {\n\n    const notes = props.notes;\n\n    return (\n        <>\n            <div className=\"row row-cols-2 row-cols-sm-3 row-cols-md-4\">\n                {\n                    Object.keys(notes).map((note,i) =>\n                    <Note key={i} project={props.project} type={notes[note].type} text={notes[note].text} title={notes[note].title} url={notes[note].url} />\n                )}\n            </div>\n        </>\n    )\n}\n    \n    \n\n\nexport default Project;","\nconst SelectProject = props => {\n    \n    return (\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Project</label>\n                    </div>\n                    <select className=\"custom-select\" onChange={(e) => props.callback(e.target.value)}>\n                    <option selected>...</option>\n                        { Object.keys(props.projects).map((project,idx) =>\n                            <option value={props.projects[project]}>\n                                    {props.projects[project]}\n                                </option>\n                        )}\n                    </select>\n                </div>\n            )\n}\n\nexport default SelectProject;","import { NOTE_TYPE } from \"../data/data\"\n\nconst SelectType = props => {\n    \n    return (\n        <>\n            <h6>Type of Note:</h6>\n            <div className=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"customRadioInline1\" name=\"customRadioInline1\" className=\"custom-control-input\" value={NOTE_TYPE.TEXT}  onChange={(e) => {\n                    props.resetUrl(\"\")\n                    props.enable(false)\n                    props.callback(e.target.value)}\n                }/>\n                <label className=\"custom-control-label\" htmlFor=\"customRadioInline1\">Text</label>\n            </div>\n            <div className=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"customRadioInline2\" name=\"customRadioInline1\" className=\"custom-control-input\" value={NOTE_TYPE.LINK} onChange={(e) => {\n                    props.resetText(\"\")\n                    props.resetTitle(\"\")\n                    props.enable(false)\n                    props.callback(e.target.value)}\n                }/>\n                <label className=\"custom-control-label\" htmlFor=\"customRadioInline2\">Link</label>\n            </div>\n        </>\n    )\n}\n\nexport default SelectType;","import { useState } from \"react\"\nimport {NOTE_TYPE} from \"../data/data\"\n\nconst TextInput = props => {\n\n    const isValid = (e) => {\n\n        if(props.field !== \"Create new Project\") {\n\n            if (e.target.value.length > 0) {\n                props.setValue(e.target.value)\n            }\n\n            if (props.type === NOTE_TYPE.TEXT) {\n                if (props.field === \"Title\" || props.field === \"Text\") {\n                    if (e.target.value.length > 0) {\n                        setErrorStyle(\"form-control\")\n                        props.enable(true)\n                    } else {\n                        setErrorStyle(\"form-control red-border\")\n                        props.enable(false)\n                    }\n                } else {\n                    setErrorStyle(\"form-control\")\n                    props.enable(false)\n                }\n            } else {\n                if (props.field === \"url\") {\n                    if (e.target.value.length > 0) {\n                        setErrorStyle(\"form-control\")\n                        props.enable(true)\n                    } else {\n                        setErrorStyle(\"form-control red-border\")\n                        props.enable(false)\n                    }   \n                } else {\n                    setErrorStyle(\"form-control\")\n                    props.enable(false)\n                }\n            }\n        } else {\n            props.setValue(e.target.value)\n        }\n    }\n\n    const [errorStyle, setErrorStyle] = useState(\"form-control\")\n\n    return (\n\n        <div className=\"form-group align-center\">\n            <label htmlFor=\"formGroupExampleInput\">{props.field}</label>\n            <input type=\"text\" class={errorStyle} placeholder={props.field} onChange={isValid}/>\n        </div>\n    )\n}\n\nexport default TextInput;","const AddCancel = props => {\n\n    const enable = props.enable\n    const state = \"btn btn-info btn-lg \" + (enable ? \"\":\"disabled\")\n\n    \n    return (\n        <>\n            <div data-bs-toggle=\"collapse\" data-bs-target=\"#collapseAdd\">\n                <div className={state} tabindex=\"-1\" role=\"button\" aria-disabled=\"true\" onClick={() => {\n                    \n                    let note = {project: props.project, type: props.type, title: props.title, text: props.text, url:props.url, color:props.color}\n                    props.callback([...props.data,note])\n                }}>\n                    Add\n                </div>\n                <div className=\"btn btn-light btn-lg add-cancel\" tabindex=\"-1\" role=\"button\">Cancel</div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default AddCancel;","\nconst SelectColor = props => {\n    return (\n            <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Color</label>\n                </div>\n                <select className=\"custom-select\" id=\"inputGroupSelect01\" onChange={(e) => props.callback(e.target.value)}>\n                    <option selected value=\"bg-warning\">Yellow</option>\n                    <option value=\"bg-info\">Blue</option>\n                    <option value=\"bg-light\">White</option>\n                </select>\n            </div>\n        )\n}\n\nexport default SelectColor;","import SelectProject from \"./SelectProject\"\nimport SelectType from \"./SelectType\"\nimport TextInput from \"./TextInput\"\nimport {useState} from \"react\";\nimport AddCancel from \"./AddCancel\";\nimport { NO_PROJECT } from \"../data/data\";\nimport SelectColor from \"./SelectColor\";\n\n\n\nconst AddNote = props => {\n\n        const [selectedProject, setProject] = useState(NO_PROJECT);\n        const [newProject, setNewProject] = useState(\"\");\n        const [selectedType, setType] = useState(\"\");\n        const [text, setText] = useState(\"\");\n        const [title, setTitle] = useState(\"\");\n        const [url, setUrl] = useState(\"\");\n        const [selectedColor, setColor] = useState(\"bg-warning\");\n        const [isEnabled, setEnable] = useState(false);\n\n    return (\n        <>\n            <div className=\"container\">\n                <SelectProject projects={props.projects} callback={setProject}/>\n                <TextInput field=\"Create new Project\" setValue={setNewProject}/>\n                <SelectType selectedType={props.selectedType} callback={setType} resetText={setText} resetTitle={setTitle} resetUrl={setUrl} enable={setEnable}/>\n                <TextInput field=\"Title\" setValue={setTitle} type={selectedType} enable={setEnable}/>\n                <TextInput field=\"Text\" setValue={setText} type={selectedType} enable={setEnable}/>\n                <TextInput field=\"url\" setValue={setUrl} type={selectedType} enable={setEnable}/>\n                <SelectColor callback={setColor}/>\n                <AddCancel enable={isEnabled} data={props.data} callback={props.callback} project={(newProject.length > 0) ? newProject: selectedProject} type={selectedType} title={title} url={url} text={text} color={selectedColor}/>\n            </div>\n        </>\n    )\n}\n\nexport default AddNote;","import data, { NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport AddNote from \"../components/AddNote\"\nimport Note from \"../components/Note\"\nimport {useState} from \"react\";\n\nconst allProjects = [];\n(function() {\n        Object.keys(data).map ((project, idx) => {\n            allProjects.push(project)\n        })\n})();\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [newData, setData] = useState([]);\n    var newProjects = []\n\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div id=\"projects\" className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Buttons for projects\">\n                        \n                        \n                        {Object.keys(newData).map((each,idx) => \n                            ((!allProjects.includes(newData[each].project) && newData[each].project !== null) ?\n                            <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([newData[each].project])}>\n                                what\n                            </button>:\"\")\n                            \n                        )}\n                        \n                        {Object.keys(data).map((project,idx) =>\n                            ((project !== NO_PROJECT) ? \n                            <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                {project}\n                            </button>: \"\")\n                        )}\n                        {Object.keys(newData).map((each,idx) => \n                            ((!allProjects.includes(newData[each].project) && newData[each].project !== null) ?\n                            allProjects.push(newData[each].project):\"\")\n                        )}\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseAdd\">\n                            + Add\n                        </button>\n                    </div>\n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseAdd\">\n                    <AddNote callback={setData} projects={allProjects} data={newData}/>\n                </div>\n                <div className=\"container\">\n                    {Object.keys(data).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={data[project]}/> : \"\")\n                    )}\n                    <div className=\"row row-cols-2 row-cols-sm-3 row-cols-md-4\">\n                    {Object.keys(newData).map((each,idx) => \n                        ((toRender.includes(newData[each].project)) ?\n                            <Note project={newData[each].project} type={newData[each].type} text={newData[each].text} title={newData[each].title} url={newData[each].url} bg={newData[each].color}/>\n                        :\"\")\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n    \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}