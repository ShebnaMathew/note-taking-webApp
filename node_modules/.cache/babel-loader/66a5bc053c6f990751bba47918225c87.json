{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/note-taking-webApp/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport data, { NO_PROJECT } from \"../data/data\";\nimport Project from \"../components/Project\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport AddNote from \"../components/AddNote\";\nimport Note from \"../components/Note\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allProjects = [];\n\n(function () {\n  Object.keys(data).map((project, idx) => {\n    allProjects.push(project);\n  });\n})();\n\nconst App = () => {\n  _s();\n\n  const [toRender, setToRender] = useState(allProjects);\n  const [currentData, setData] = useState(data);\n\n  const addNote = note => {\n    console.log(\"new note: \", note);\n    console.log(\"new note: \", note.project);\n    console.log(\"note project: \", data[note.project]);\n    let newNote = {\n      type: note.type,\n      title: note.title,\n      text: note.text\n    };\n    {\n      Object.keys(data).map((project, idx) => project === note.project ? data[project].push(newNote) : \"\");\n    }\n\n    if (allProjects.indexOf(note.project) > 0) {\n      allProjects.indexOf(note.project);\n    }\n\n    setData(data);\n    console.log(\"updated project: \", data[note.project]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand mb-0 h1 mx-auto\",\n          children: \"All we do is take notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      className: \"text-center bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        role: \"group\",\n        \"aria-label\": \"Buttons for projects\",\n        children: [Object.keys(currentData).map((project, idx) => project !== NO_PROJECT ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([project]),\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender(allProjects),\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseAdd\",\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse mx-auto\",\n      id: \"collapseAdd\",\n      children: /*#__PURE__*/_jsxDEV(AddNote, {\n        callback: addNote,\n        projects: allProjects,\n        data: currentData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: Object.keys(currentData).map((project, idx) => toRender.includes(project) ? /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        notes: currentData[project]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this) : \"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"qhseBfjS3aIIy1ODZv2s2sg+uMM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/note-taking-webApp/src/views/App.js"],"names":["data","NO_PROJECT","Project","AddNote","Note","useState","allProjects","Object","keys","map","project","idx","push","App","toRender","setToRender","currentData","setData","addNote","note","console","log","newNote","type","title","text","indexOf","includes"],"mappings":"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","sourcesContent":["import data, { NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport AddNote from \"../components/AddNote\"\nimport Note from \"../components/Note\"\nimport {useState} from \"react\";\n\nconst allProjects = [];\n(function() {\n        Object.keys(data).map ((project, idx) => {\n            allProjects.push(project)\n        })\n})();\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [currentData, setData] = useState(data);\n\n    const addNote = (note) => {\n        console.log(\"new note: \", note)\n        console.log(\"new note: \", note.project)\n        console.log(\"note project: \", data[note.project])\n\n        let newNote = {\n            type: note.type,\n            title: note.title,\n            text: note.text\n        }\n\n        {Object.keys(data).map((project,idx) =>\n            ((project === note.project) ? \n            data[project].push(newNote): \"\")\n        )}\n\n        if (allProjects.indexOf(note.project) > 0) {\n            allProjects.indexOf(note.project)\n        }\n        \n        setData(data)\n        console.log(\"updated project: \", data[note.project])\n    }\n\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div id=\"projects\" className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Buttons for projects\">\n                        \n                        {Object.keys(currentData).map((project,idx) =>\n                            ((project !== NO_PROJECT) ? \n                            <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                {project}\n                            </button>: \"\")\n                        )}\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseAdd\">\n                            + Add\n                        </button>\n                    </div>\n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseAdd\">\n                    <AddNote callback={addNote} projects={allProjects} data={currentData}/>\n                </div>\n                <div className=\"container\">\n                    {Object.keys(currentData).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={currentData[project]}/> : \"\")\n                    )}{/* \n                    <div className=\"row row-cols-2 row-cols-sm-3 row-cols-md-4\">\n                    {Object.keys(newData).map((each,idx) => \n                        ((toRender.includes(newData[each].project)) ?\n                            <Note project={newData[each].project} type={newData[each].type} text={newData[each].text} title={newData[each].title} url={newData[each].url} bg={newData[each].color}/>\n                        :\"\")\n                    )}\n                    </div> */}\n                </div>\n            </div>\n    )\n}\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}