{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/note-taking-webApp/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\";\nimport Project from \"../components/Project\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport AddNote from \"../components/AddNote\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allProjects = [];\n\n(function () {\n  Object.keys(data).map((project, idx) => {\n    allProjects.push(project);\n  });\n})();\n\nconst App = () => {\n  _s();\n\n  const [toRender, setToRender] = useState(allProjects);\n  const [currentData, setData] = useState(data);\n\n  const addNote = note => {\n    let newNote = {};\n\n    if (note.type === NOTE_TYPE.TEXT) {\n      newNote = {\n        type: note.type,\n        title: note.title,\n        text: note.text,\n        color: note.color\n      };\n    } else {\n      newNote = {\n        type: note.type,\n        url: note.url,\n        text: note.text,\n        color: note.color\n      };\n    }\n\n    if (allProjects.indexOf(note.project) === -1) {\n      allProjects.push(note.project);\n      setData({ ...currentData,\n        [note.project]: [newNote]\n      });\n    } else {\n      let temp = [...currentData[note.project], newNote];\n      setData({ ...currentData,\n        [note.project]: temp\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand mb-0 h1 mx-auto\",\n          children: \"All we do is take notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      className: \"text-center bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        role: \"group\",\n        \"aria-label\": \"Buttons for projects\",\n        children: [Object.keys(currentData).map((project, idx) => project !== NO_PROJECT ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([project]),\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender(allProjects),\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseAdd\",\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse mx-auto\",\n      id: \"collapseAdd\",\n      children: /*#__PURE__*/_jsxDEV(AddNote, {\n        callback: addNote,\n        projects: allProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: Object.keys(currentData).map((project, idx) => toRender.includes(project) ? /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        notes: currentData[project]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }, this) : \"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"qhseBfjS3aIIy1ODZv2s2sg+uMM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/note-taking-webApp/src/views/App.js"],"names":["data","NOTE_TYPE","NO_PROJECT","Project","AddNote","useState","allProjects","Object","keys","map","project","idx","push","App","toRender","setToRender","currentData","setData","addNote","note","newNote","type","TEXT","title","text","color","url","indexOf","temp","includes"],"mappings":"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","sourcesContent":["import data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport AddNote from \"../components/AddNote\"\nimport {useState} from \"react\";\n\nconst allProjects = [];\n(function() {\n        Object.keys(data).map ((project, idx) => {\n            allProjects.push(project)\n        })\n})();\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [currentData, setData] = useState(data);\n\n    const addNote = (note) => {\n        let newNote = {}\n        if (note.type === NOTE_TYPE.TEXT) {\n            newNote = {\n                type: note.type,\n                title: note.title,\n                text: note.text,\n                color: note.color\n            }\n        } else {\n            newNote = {\n                type: note.type,\n                url: note.url,\n                text: note.text,\n                color: note.color\n            }\n        }\n\n        if (allProjects.indexOf(note.project) === -1) {\n            allProjects.push(note.project)\n            setData({...currentData, [note.project]: [newNote]});\n\n        } else {\n            let temp = [...currentData[note.project], newNote]\n            setData({...currentData, [note.project]: temp});\n        }\n        \n    }\n\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div id=\"projects\" className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Buttons for projects\">\n                        \n                        {Object.keys(currentData).map((project,idx) =>\n                            ((project !== NO_PROJECT) ? \n                            <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                {project}\n                            </button>: \"\")\n                        )}\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseAdd\">\n                            + Add\n                        </button>\n                    </div>\n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseAdd\">\n                    <AddNote callback={addNote} projects={allProjects}/>\n                </div>\n                <div className=\"container\">\n                    {Object.keys(currentData).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={currentData[project]}/> : \"\")\n                    )}\n                </div>\n            </div>\n    )\n}\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}