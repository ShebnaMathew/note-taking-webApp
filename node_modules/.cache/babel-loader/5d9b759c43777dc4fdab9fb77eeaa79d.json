{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/note-taking-webApp/src/components/TextInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { NOTE_TYPE } from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextInput = props => {\n  _s();\n\n  /* const isValid = (e) => {\n       if(props.field !== \"Create new Project\") {\n           if (e.target.value.length > 0) {\n              props.setValue(e.target.value)\n          }\n           if (props.type === NOTE_TYPE.TEXT) {\n              if (props.field === \"Title\" || props.field === \"Text\") {\n                  if (e.target.value.length > 0) {\n                      setErrorStyle(\"form-control\")\n                      props.enable(true)\n                  } else {\n                      setErrorStyle(\"form-control red-border\")\n                      props.enable(false)\n                  }\n              } else {\n                  setErrorStyle(\"form-control\")\n                  props.enable(false)\n              }\n          } else {\n              if (props.field === \"url\") {\n                  if (e.target.value.length > 0) {\n                      setErrorStyle(\"form-control\")\n                      props.enable(true)\n                  } else {\n                      setErrorStyle(\"form-control red-border\")\n                      props.enable(false)\n                  }   \n              } else {\n                  setErrorStyle(\"form-control\")\n                  props.enable(false)\n              }\n          }\n      } else {\n          props.setValue(e.target.value)\n      }\n  } */\n  const [errorStyle, setErrorStyle] = useState(\"form-control\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group align-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"formGroupExampleInput\",\n      children: props.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      class: errorStyle,\n      placeholder: props.field,\n      onChange: isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextInput, \"VDWKuVu9l8P9h4uu5x+QjIm/tx8=\");\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/note-taking-webApp/src/components/TextInput.js"],"names":["useState","NOTE_TYPE","TextInput","props","errorStyle","setErrorStyle","field","isValid"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,SAAR,QAAwB,cAAxB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKI,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,cAAD,CAA5C;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,uBAAf;AAAA,gBAAwCG,KAAK,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEF,UAA1B;AAAsC,MAAA,WAAW,EAAED,KAAK,CAACG,KAAzD;AAAgE,MAAA,QAAQ,EAAEC;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CAnDD;;GAAML,S;;KAAAA,S;AAqDN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\"\nimport {NOTE_TYPE} from \"../data/data\"\n\nconst TextInput = props => {\n\n    /* const isValid = (e) => {\n\n        if(props.field !== \"Create new Project\") {\n\n            if (e.target.value.length > 0) {\n                props.setValue(e.target.value)\n            }\n\n            if (props.type === NOTE_TYPE.TEXT) {\n                if (props.field === \"Title\" || props.field === \"Text\") {\n                    if (e.target.value.length > 0) {\n                        setErrorStyle(\"form-control\")\n                        props.enable(true)\n                    } else {\n                        setErrorStyle(\"form-control red-border\")\n                        props.enable(false)\n                    }\n                } else {\n                    setErrorStyle(\"form-control\")\n                    props.enable(false)\n                }\n            } else {\n                if (props.field === \"url\") {\n                    if (e.target.value.length > 0) {\n                        setErrorStyle(\"form-control\")\n                        props.enable(true)\n                    } else {\n                        setErrorStyle(\"form-control red-border\")\n                        props.enable(false)\n                    }   \n                } else {\n                    setErrorStyle(\"form-control\")\n                    props.enable(false)\n                }\n            }\n        } else {\n            props.setValue(e.target.value)\n        }\n    } */\n\n    const [errorStyle, setErrorStyle] = useState(\"form-control\")\n\n    return (\n\n        <div className=\"form-group align-center\">\n            <label htmlFor=\"formGroupExampleInput\">{props.field}</label>\n            <input type=\"text\" class={errorStyle} placeholder={props.field} onChange={isValid}/>\n        </div>\n    )\n}\n\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}