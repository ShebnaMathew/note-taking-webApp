{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js\",\n    _s = $RefreshSig$();\n\nimport data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\";\nimport Project from \"../components/Project\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport { useEffect, useState } from \"react\";\nimport AddNote from \"../components/AddNote\";\nimport Note from \"../components/Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allProjects = new Array();\n\n(function () {\n  Object.keys(data).map((project, idx) => {\n    allProjects.push(project);\n  });\n})();\n\nconst App = () => {\n  _s();\n\n  const [toRender, setToRender] = useState(allProjects);\n  const [newData, setData] = useState([]);\n  console.log(\"newData: \", newData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand mb-0 h1 mx-auto\",\n          children: \"All we do is take notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      className: \"text-center bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        role: \"group\",\n        \"aria-label\": \"Basic example\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender(allProjects),\n          children: \"All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), Object.keys(data).map((project, idx) => project != NO_PROJECT ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([project]),\n          children: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this) : \"\"), Object.keys(newData).map((each, idx) => !toRender.includes(newData[each].project) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: () => setToRender([newData[each].project]),\n          children: newData[each].project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this) : allProjects), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseExample\",\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse mx-auto\",\n      id: \"collapseExample\",\n      children: /*#__PURE__*/_jsxDEV(AddNote, {\n        callback: setData,\n        projects: allProjects,\n        data: newData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [Object.keys(data).map((project, idx) => toRender.includes(project) ? /*#__PURE__*/_jsxDEV(Project, {\n        project: project,\n        notes: data[project]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this) : \"\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-2 row-cols-sm-3 row-cols-md-4\",\n        children: Object.keys(newData).map((each, idx) => toRender.includes(newData[each].project) ? /*#__PURE__*/_jsxDEV(Note, {\n          project: newData[each].project,\n          type: newData[each].type,\n          text: newData[each].text,\n          title: newData[each].title,\n          url: newData[each].url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this) : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 14\n  }, this);\n};\n\n_s(App, \"9UqAiYvdvWwlcOW+Mw/aEffXg4U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/HW/assignment_2/src/views/App.js"],"names":["data","NOTE_TYPE","NO_PROJECT","Project","useEffect","useState","AddNote","Note","allProjects","Array","Object","keys","map","project","idx","push","App","toRender","setToRender","newData","setData","console","log","each","includes","type","text","title","url"],"mappings":"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","sourcesContent":["import data, { NOTE_TYPE, NO_PROJECT } from \"../data/data\"\nimport Project from \"../components/Project\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/styles.css';\nimport {useEffect, useState} from \"react\";\nimport AddNote from \"../components/AddNote\"\nimport Note from \"../components/Note\"\n\n\nconst allProjects = new Array();\n    (function() {\n        Object.keys(data).map ((project, idx) => {\n            allProjects.push(project)\n        })\n    })();\n\n\nconst App = () => {\n    \n    const [toRender, setToRender] = useState(allProjects);\n    const [newData, setData] = useState([]);\n    console.log(\"newData: \", newData)\n\n    return ( <div>\n                <nav className=\"navbar navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <span className=\"navbar-brand mb-0 h1 mx-auto\">All we do is take notes.</span>\n                    </div>\n                </nav>\n\n                <div id=\"projects\" className=\"text-center bg-light\">\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender(allProjects)}>\n                            All Notes\n                        </button>\n                        { Object.keys(data).map((project,idx) =>\n                                ((project != NO_PROJECT) ? \n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([project])}>\n                                    {project}\n                                </button>: \"\")\n                        )}\n                        {Object.keys(newData).map((each,idx) => \n                        ((!toRender.includes(newData[each].project)) ? \n                        <button type=\"button\" className=\"btn btn-light\" onClick={() => setToRender([newData[each].project])}>\n                            {newData[each].project}\n                        </button>: allProjects)\n                    \n                    )\n                    }\n                        <button type=\"button\" className=\"btn btn-info\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\">\n                            + Add\n                        </button>\n                    </div>\n                    \n                </div>\n                <div className=\"collapse mx-auto\" id=\"collapseExample\">\n                    <AddNote callback={setData} projects={allProjects} data={newData}/>\n                </div>\n                <div className=\"container\">\n                    \n                    { Object.keys(data).map((project,idx) => \n                        ((toRender.includes(project)) ?\n                            <Project key={idx} project={project} notes={data[project]}/> : \"\")\n                        )\n                    }\n                    <div className=\"row row-cols-2 row-cols-sm-3 row-cols-md-4\">\n                    {Object.keys(newData).map((each,idx) => \n                        \n                        ((toRender.includes(newData[each].project)) ?\n                            <Note project={newData[each].project} type={newData[each].type} text={newData[each].text} title={newData[each].title} url={newData[each].url}/>\n                            :\"\")\n                    \n                    )\n                    }\n                    </div>\n                </div>\n            </div>\n    )\n}\n    \n\nexport default App;"]},"metadata":{},"sourceType":"module"}